/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface MechGuildInterface extends ethers.utils.Interface {
  functions: {
    'CREATE_GUILD_WITH_SIG_TYPEHASH()': FunctionFragment
    'GUILD_HALL_ID()': FunctionFragment
    'JOIN_GUILD_WITH_SIG_TYPEHASH()': FunctionFragment
    'NITRO_LAB_ID()': FunctionFragment
    '__MechaGuild_init(address,address,uint256,address,address,address)': FunctionFragment
    'acceptJoinRequest(address[])': FunctionFragment
    'changeGuildMaster(address)': FunctionFragment
    'claimNitro()': FunctionFragment
    'contributeGuildBase(uint256,uint256)': FunctionFragment
    'createGuildFee()': FunctionFragment
    'createGuildMaterial()': FunctionFragment
    'createGuildSigNonces(address)': FunctionFragment
    'createGuildWithSig(bool,tuple)': FunctionFragment
    'fundingWallet()': FunctionFragment
    'getCurrentBuildingLevel(uint256,uint256)': FunctionFragment
    'getEthSignedMessageHash(bytes32)': FunctionFragment
    'getMemberOfGuild(uint256)': FunctionFragment
    'getPendingMemberOfGuild(uint256)': FunctionFragment
    'getSignerAddress(bytes32,bytes)': FunctionFragment
    'guildCount()': FunctionFragment
    'guildHall(uint256)': FunctionFragment
    'guildHallSetting(uint256,uint256)': FunctionFragment
    'guilds(uint256)': FunctionFragment
    'joinGuildSigNonces(address)': FunctionFragment
    'joinGuildWithSig(uint256,tuple)': FunctionFragment
    'kickMember(address)': FunctionFragment
    'materialContract()': FunctionFragment
    'materialID()': FunctionFragment
    'maxGuildHallLevel()': FunctionFragment
    'maxNitroLabLevel()': FunctionFragment
    'mechContract()': FunctionFragment
    'nitroContract()': FunctionFragment
    'nitroLab(uint256)': FunctionFragment
    'nitroLabSetting(uint256,uint256)': FunctionFragment
    'nitroProductionFee()': FunctionFragment
    'outOfGuild()': FunctionFragment
    'owner()': FunctionFragment
    'penaltyTime()': FunctionFragment
    'produceNitro()': FunctionFragment
    'renounceOwnership()': FunctionFragment
    'setSigner(address)': FunctionFragment
    'transferOwnership(address)': FunctionFragment
    'upgradeBuilding(uint256)': FunctionFragment
    'users(address)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'CREATE_GUILD_WITH_SIG_TYPEHASH', values?: undefined): string
  encodeFunctionData(functionFragment: 'GUILD_HALL_ID', values?: undefined): string
  encodeFunctionData(functionFragment: 'JOIN_GUILD_WITH_SIG_TYPEHASH', values?: undefined): string
  encodeFunctionData(functionFragment: 'NITRO_LAB_ID', values?: undefined): string
  encodeFunctionData(
    functionFragment: '__MechaGuild_init',
    values: [string, string, BigNumberish, string, string, string]
  ): string
  encodeFunctionData(functionFragment: 'acceptJoinRequest', values: [string[]]): string
  encodeFunctionData(functionFragment: 'changeGuildMaster', values: [string]): string
  encodeFunctionData(functionFragment: 'claimNitro', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'contributeGuildBase',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'createGuildFee', values?: undefined): string
  encodeFunctionData(functionFragment: 'createGuildMaterial', values?: undefined): string
  encodeFunctionData(functionFragment: 'createGuildSigNonces', values: [string]): string
  encodeFunctionData(
    functionFragment: 'createGuildWithSig',
    values: [boolean, { deadline: BigNumberish; v: BigNumberish; r: BytesLike; s: BytesLike }]
  ): string
  encodeFunctionData(functionFragment: 'fundingWallet', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'getCurrentBuildingLevel',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'getEthSignedMessageHash', values: [BytesLike]): string
  encodeFunctionData(functionFragment: 'getMemberOfGuild', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'getPendingMemberOfGuild', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'getSignerAddress', values: [BytesLike, BytesLike]): string
  encodeFunctionData(functionFragment: 'guildCount', values?: undefined): string
  encodeFunctionData(functionFragment: 'guildHall', values: [BigNumberish]): string
  encodeFunctionData(
    functionFragment: 'guildHallSetting',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'guilds', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'joinGuildSigNonces', values: [string]): string
  encodeFunctionData(
    functionFragment: 'joinGuildWithSig',
    values: [BigNumberish, { deadline: BigNumberish; v: BigNumberish; r: BytesLike; s: BytesLike }]
  ): string
  encodeFunctionData(functionFragment: 'kickMember', values: [string]): string
  encodeFunctionData(functionFragment: 'materialContract', values?: undefined): string
  encodeFunctionData(functionFragment: 'materialID', values?: undefined): string
  encodeFunctionData(functionFragment: 'maxGuildHallLevel', values?: undefined): string
  encodeFunctionData(functionFragment: 'maxNitroLabLevel', values?: undefined): string
  encodeFunctionData(functionFragment: 'mechContract', values?: undefined): string
  encodeFunctionData(functionFragment: 'nitroContract', values?: undefined): string
  encodeFunctionData(functionFragment: 'nitroLab', values: [BigNumberish]): string
  encodeFunctionData(
    functionFragment: 'nitroLabSetting',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'nitroProductionFee', values?: undefined): string
  encodeFunctionData(functionFragment: 'outOfGuild', values?: undefined): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(functionFragment: 'penaltyTime', values?: undefined): string
  encodeFunctionData(functionFragment: 'produceNitro', values?: undefined): string
  encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string
  encodeFunctionData(functionFragment: 'setSigner', values: [string]): string
  encodeFunctionData(functionFragment: 'transferOwnership', values: [string]): string
  encodeFunctionData(functionFragment: 'upgradeBuilding', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'users', values: [string]): string

  decodeFunctionResult(functionFragment: 'CREATE_GUILD_WITH_SIG_TYPEHASH', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'GUILD_HALL_ID', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'JOIN_GUILD_WITH_SIG_TYPEHASH', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'NITRO_LAB_ID', data: BytesLike): Result
  decodeFunctionResult(functionFragment: '__MechaGuild_init', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'acceptJoinRequest', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'changeGuildMaster', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'claimNitro', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'contributeGuildBase', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'createGuildFee', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'createGuildMaterial', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'createGuildSigNonces', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'createGuildWithSig', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'fundingWallet', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getCurrentBuildingLevel', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getEthSignedMessageHash', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getMemberOfGuild', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getPendingMemberOfGuild', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getSignerAddress', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'guildCount', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'guildHall', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'guildHallSetting', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'guilds', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'joinGuildSigNonces', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'joinGuildWithSig', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'kickMember', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'materialContract', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'materialID', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'maxGuildHallLevel', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'maxNitroLabLevel', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'mechContract', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'nitroContract', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'nitroLab', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'nitroLabSetting', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'nitroProductionFee', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'outOfGuild', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'penaltyTime', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'produceNitro', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'setSigner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'upgradeBuilding', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'users', data: BytesLike): Result

  events: {
    'ChangedGuildMaster(uint256,address,address)': EventFragment
    'ClaimedNitro(uint256,address)': EventFragment
    'ContributeGuildHall(uint256,address,uint256)': EventFragment
    'ContributeNitroLab(uint256,address,uint256)': EventFragment
    'CreatedGuild(uint256,address,bool)': EventFragment
    'Joined(uint256,address)': EventFragment
    'OutOfGuild(uint256,address)': EventFragment
    'OwnershipTransferred(address,address)': EventFragment
    'ProduceNitro(uint256,address,uint256)': EventFragment
    'RequestToJoin(uint256,address)': EventFragment
    'UpgradeGuildHall(uint256,uint256,uint256)': EventFragment
    'UpgradeNitroLab(uint256,uint256,uint256)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'ChangedGuildMaster'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ClaimedNitro'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ContributeGuildHall'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ContributeNitroLab'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreatedGuild'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Joined'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OutOfGuild'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ProduceNitro'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RequestToJoin'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'UpgradeGuildHall'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'UpgradeNitroLab'): EventFragment
}

export class MechGuild extends Contract {
  'connect'(signerOrProvider: Signer | Provider | string): this
  'attach'(addressOrName: string): this
  'deployed'(): Promise<this>

  'on'(event: EventFilter | string, listener: Listener): this
  'once'(event: EventFilter | string, listener: Listener): this
  'addListener'(eventName: EventFilter | string, listener: Listener): this
  'removeAllListeners'(eventName: EventFilter | string): this
  'removeListener'(eventName: any, listener: Listener): this

  'interface': MechGuildInterface

  'functions': {
    CREATE_GUILD_WITH_SIG_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'CREATE_GUILD_WITH_SIG_TYPEHASH()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    GUILD_HALL_ID(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'GUILD_HALL_ID()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    JOIN_GUILD_WITH_SIG_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'JOIN_GUILD_WITH_SIG_TYPEHASH()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    NITRO_LAB_ID(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'NITRO_LAB_ID()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    __MechaGuild_init(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    '__MechaGuild_init(address,address,uint256,address,address,address)'(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    acceptJoinRequest(members: string[], overrides?: Overrides): Promise<ContractTransaction>

    'acceptJoinRequest(address[])'(
      members: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>

    changeGuildMaster(newMaster: string, overrides?: Overrides): Promise<ContractTransaction>

    'changeGuildMaster(address)'(
      newMaster: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    claimNitro(overrides?: Overrides): Promise<ContractTransaction>

    'claimNitro()'(overrides?: Overrides): Promise<ContractTransaction>

    contributeGuildBase(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'contributeGuildBase(uint256,uint256)'(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    createGuildFee(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'createGuildFee()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    createGuildMaterial(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'createGuildMaterial()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    createGuildSigNonces(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'createGuildSigNonces(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    createGuildWithSig(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'createGuildWithSig(bool,tuple)'(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>

    fundingWallet(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'fundingWallet()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    getCurrentBuildingLevel(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'getCurrentBuildingLevel(uint256,uint256)'(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    getEthSignedMessageHash(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'getEthSignedMessageHash(bytes32)'(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    getMemberOfGuild(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[]
    }>

    'getMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[]
    }>

    getPendingMemberOfGuild(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[]
    }>

    'getPendingMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[]
    }>

    getSignerAddress(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'getSignerAddress(bytes32,bytes)'(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    guildCount(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'guildCount()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    guildHall(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'guildHall(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    guildHallSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'guildHallSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    guilds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      master: string
      isPrivate: boolean
      0: string
      1: boolean
    }>

    'guilds(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      master: string
      isPrivate: boolean
      0: string
      1: boolean
    }>

    joinGuildSigNonces(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'joinGuildSigNonces(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    joinGuildWithSig(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'joinGuildWithSig(uint256,tuple)'(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>

    kickMember(memberAddress: string, overrides?: Overrides): Promise<ContractTransaction>

    'kickMember(address)'(
      memberAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    materialContract(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'materialContract()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    materialID(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'materialID()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    maxGuildHallLevel(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'maxGuildHallLevel()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    maxNitroLabLevel(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'maxNitroLabLevel()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    mechContract(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'mechContract()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    nitroContract(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'nitroContract()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    nitroLab(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'nitroLab(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    nitroLabSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'nitroLabSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    nitroProductionFee(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'nitroProductionFee()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    outOfGuild(overrides?: Overrides): Promise<ContractTransaction>

    'outOfGuild()'(overrides?: Overrides): Promise<ContractTransaction>

    owner(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    'owner()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string
    }>

    penaltyTime(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    'penaltyTime()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber
    }>

    produceNitro(overrides?: Overrides): Promise<ContractTransaction>

    'produceNitro()'(overrides?: Overrides): Promise<ContractTransaction>

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

    setSigner(_signer: string, overrides?: Overrides): Promise<ContractTransaction>

    'setSigner(address)'(_signer: string, overrides?: Overrides): Promise<ContractTransaction>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    upgradeBuilding(buildingType: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

    'upgradeBuilding(uint256)'(
      buildingType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    users(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      guildId: BigNumber
      lastOutOfGuild: BigNumber
      guildHallContribution: BigNumber
      nitroLabContribution: BigNumber
      producedNitro: BigNumber
      produceCompletedTime: BigNumber
      claimedNitro: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
    }>

    'users(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      guildId: BigNumber
      lastOutOfGuild: BigNumber
      guildHallContribution: BigNumber
      nitroLabContribution: BigNumber
      producedNitro: BigNumber
      produceCompletedTime: BigNumber
      claimedNitro: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
    }>
  }

  'CREATE_GUILD_WITH_SIG_TYPEHASH'(overrides?: CallOverrides): Promise<string>

  'CREATE_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<string>

  'GUILD_HALL_ID'(overrides?: CallOverrides): Promise<BigNumber>

  'GUILD_HALL_ID()'(overrides?: CallOverrides): Promise<BigNumber>

  'JOIN_GUILD_WITH_SIG_TYPEHASH'(overrides?: CallOverrides): Promise<string>

  'JOIN_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<string>

  'NITRO_LAB_ID'(overrides?: CallOverrides): Promise<BigNumber>

  'NITRO_LAB_ID()'(overrides?: CallOverrides): Promise<BigNumber>

  '__MechaGuild_init'(
    _nitroContract: string,
    _materialContract: string,
    _materialId: BigNumberish,
    _mechContract: string,
    _fundingWallet: string,
    _signer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  '__MechaGuild_init(address,address,uint256,address,address,address)'(
    _nitroContract: string,
    _materialContract: string,
    _materialId: BigNumberish,
    _mechContract: string,
    _fundingWallet: string,
    _signer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'acceptJoinRequest'(members: string[], overrides?: Overrides): Promise<ContractTransaction>

  'acceptJoinRequest(address[])'(
    members: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'changeGuildMaster'(newMaster: string, overrides?: Overrides): Promise<ContractTransaction>

  'changeGuildMaster(address)'(
    newMaster: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'claimNitro'(overrides?: Overrides): Promise<ContractTransaction>

  'claimNitro()'(overrides?: Overrides): Promise<ContractTransaction>

  'contributeGuildBase'(
    buildingType: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'contributeGuildBase(uint256,uint256)'(
    buildingType: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'createGuildFee'(overrides?: CallOverrides): Promise<BigNumber>

  'createGuildFee()'(overrides?: CallOverrides): Promise<BigNumber>

  'createGuildMaterial'(overrides?: CallOverrides): Promise<BigNumber>

  'createGuildMaterial()'(overrides?: CallOverrides): Promise<BigNumber>

  'createGuildSigNonces'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'createGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'createGuildWithSig'(
    isPrivate: boolean,
    sig_: {
      deadline: BigNumberish
      v: BigNumberish
      r: BytesLike
      s: BytesLike
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'createGuildWithSig(bool,tuple)'(
    isPrivate: boolean,
    sig_: {
      deadline: BigNumberish
      v: BigNumberish
      r: BytesLike
      s: BytesLike
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'fundingWallet'(overrides?: CallOverrides): Promise<string>

  'fundingWallet()'(overrides?: CallOverrides): Promise<string>

  'getCurrentBuildingLevel'(
    guildId: BigNumberish,
    buildingType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'getCurrentBuildingLevel(uint256,uint256)'(
    guildId: BigNumberish,
    buildingType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'getEthSignedMessageHash'(_messageHash: BytesLike, overrides?: CallOverrides): Promise<string>

  'getEthSignedMessageHash(bytes32)'(
    _messageHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  'getMemberOfGuild'(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

  'getMemberOfGuild(uint256)'(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

  'getPendingMemberOfGuild'(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

  'getPendingMemberOfGuild(uint256)'(
    guildId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>

  'getSignerAddress'(
    _messageHash: BytesLike,
    _signature: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  'getSignerAddress(bytes32,bytes)'(
    _messageHash: BytesLike,
    _signature: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  'guildCount'(overrides?: CallOverrides): Promise<BigNumber>

  'guildCount()'(overrides?: CallOverrides): Promise<BigNumber>

  'guildHall'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    materials: BigNumber
    level: BigNumber
    completedTime: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  'guildHall(uint256)'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    materials: BigNumber
    level: BigNumber
    completedTime: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  'guildHallSetting'(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'guildHallSetting(uint256,uint256)'(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'guilds'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    master: string
    isPrivate: boolean
    0: string
    1: boolean
  }>

  'guilds(uint256)'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    master: string
    isPrivate: boolean
    0: string
    1: boolean
  }>

  'joinGuildSigNonces'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'joinGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'joinGuildWithSig'(
    guildId: BigNumberish,
    sig_: {
      deadline: BigNumberish
      v: BigNumberish
      r: BytesLike
      s: BytesLike
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'joinGuildWithSig(uint256,tuple)'(
    guildId: BigNumberish,
    sig_: {
      deadline: BigNumberish
      v: BigNumberish
      r: BytesLike
      s: BytesLike
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'kickMember'(memberAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  'kickMember(address)'(memberAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  'materialContract'(overrides?: CallOverrides): Promise<string>

  'materialContract()'(overrides?: CallOverrides): Promise<string>

  'materialID'(overrides?: CallOverrides): Promise<BigNumber>

  'materialID()'(overrides?: CallOverrides): Promise<BigNumber>

  'maxGuildHallLevel'(overrides?: CallOverrides): Promise<BigNumber>

  'maxGuildHallLevel()'(overrides?: CallOverrides): Promise<BigNumber>

  'maxNitroLabLevel'(overrides?: CallOverrides): Promise<BigNumber>

  'maxNitroLabLevel()'(overrides?: CallOverrides): Promise<BigNumber>

  'mechContract'(overrides?: CallOverrides): Promise<string>

  'mechContract()'(overrides?: CallOverrides): Promise<string>

  'nitroContract'(overrides?: CallOverrides): Promise<string>

  'nitroContract()'(overrides?: CallOverrides): Promise<string>

  'nitroLab'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    materials: BigNumber
    level: BigNumber
    completedTime: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  'nitroLab(uint256)'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    materials: BigNumber
    level: BigNumber
    completedTime: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  'nitroLabSetting'(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'nitroLabSetting(uint256,uint256)'(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'nitroProductionFee'(overrides?: CallOverrides): Promise<BigNumber>

  'nitroProductionFee()'(overrides?: CallOverrides): Promise<BigNumber>

  'outOfGuild'(overrides?: Overrides): Promise<ContractTransaction>

  'outOfGuild()'(overrides?: Overrides): Promise<ContractTransaction>

  'owner'(overrides?: CallOverrides): Promise<string>

  'owner()'(overrides?: CallOverrides): Promise<string>

  'penaltyTime'(overrides?: CallOverrides): Promise<BigNumber>

  'penaltyTime()'(overrides?: CallOverrides): Promise<BigNumber>

  'produceNitro'(overrides?: Overrides): Promise<ContractTransaction>

  'produceNitro()'(overrides?: Overrides): Promise<ContractTransaction>

  'renounceOwnership'(overrides?: Overrides): Promise<ContractTransaction>

  'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

  'setSigner'(_signer: string, overrides?: Overrides): Promise<ContractTransaction>

  'setSigner(address)'(_signer: string, overrides?: Overrides): Promise<ContractTransaction>

  'transferOwnership'(newOwner: string, overrides?: Overrides): Promise<ContractTransaction>

  'transferOwnership(address)'(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'upgradeBuilding'(buildingType: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

  'upgradeBuilding(uint256)'(
    buildingType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'users'(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<{
    guildId: BigNumber
    lastOutOfGuild: BigNumber
    guildHallContribution: BigNumber
    nitroLabContribution: BigNumber
    producedNitro: BigNumber
    produceCompletedTime: BigNumber
    claimedNitro: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
    3: BigNumber
    4: BigNumber
    5: BigNumber
    6: BigNumber
  }>

  'users(address)'(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<{
    guildId: BigNumber
    lastOutOfGuild: BigNumber
    guildHallContribution: BigNumber
    nitroLabContribution: BigNumber
    producedNitro: BigNumber
    produceCompletedTime: BigNumber
    claimedNitro: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
    3: BigNumber
    4: BigNumber
    5: BigNumber
    6: BigNumber
  }>

  'callStatic': {
    CREATE_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<string>

    'CREATE_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<string>

    GUILD_HALL_ID(overrides?: CallOverrides): Promise<BigNumber>

    'GUILD_HALL_ID()'(overrides?: CallOverrides): Promise<BigNumber>

    JOIN_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<string>

    'JOIN_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<string>

    NITRO_LAB_ID(overrides?: CallOverrides): Promise<BigNumber>

    'NITRO_LAB_ID()'(overrides?: CallOverrides): Promise<BigNumber>

    __MechaGuild_init(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<void>

    '__MechaGuild_init(address,address,uint256,address,address,address)'(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<void>

    acceptJoinRequest(members: string[], overrides?: CallOverrides): Promise<void>

    'acceptJoinRequest(address[])'(members: string[], overrides?: CallOverrides): Promise<void>

    changeGuildMaster(newMaster: string, overrides?: CallOverrides): Promise<void>

    'changeGuildMaster(address)'(newMaster: string, overrides?: CallOverrides): Promise<void>

    claimNitro(overrides?: CallOverrides): Promise<void>

    'claimNitro()'(overrides?: CallOverrides): Promise<void>

    contributeGuildBase(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'contributeGuildBase(uint256,uint256)'(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    createGuildFee(overrides?: CallOverrides): Promise<BigNumber>

    'createGuildFee()'(overrides?: CallOverrides): Promise<BigNumber>

    createGuildMaterial(overrides?: CallOverrides): Promise<BigNumber>

    'createGuildMaterial()'(overrides?: CallOverrides): Promise<BigNumber>

    createGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'createGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    createGuildWithSig(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: CallOverrides
    ): Promise<void>

    'createGuildWithSig(bool,tuple)'(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: CallOverrides
    ): Promise<void>

    fundingWallet(overrides?: CallOverrides): Promise<string>

    'fundingWallet()'(overrides?: CallOverrides): Promise<string>

    getCurrentBuildingLevel(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'getCurrentBuildingLevel(uint256,uint256)'(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getEthSignedMessageHash(_messageHash: BytesLike, overrides?: CallOverrides): Promise<string>

    'getEthSignedMessageHash(bytes32)'(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    getMemberOfGuild(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

    'getMemberOfGuild(uint256)'(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

    getPendingMemberOfGuild(guildId: BigNumberish, overrides?: CallOverrides): Promise<string[]>

    'getPendingMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>

    getSignerAddress(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    'getSignerAddress(bytes32,bytes)'(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    guildCount(overrides?: CallOverrides): Promise<BigNumber>

    'guildCount()'(overrides?: CallOverrides): Promise<BigNumber>

    guildHall(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'guildHall(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    guildHallSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'guildHallSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    guilds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      master: string
      isPrivate: boolean
      0: string
      1: boolean
    }>

    'guilds(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      master: string
      isPrivate: boolean
      0: string
      1: boolean
    }>

    joinGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'joinGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    joinGuildWithSig(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: CallOverrides
    ): Promise<void>

    'joinGuildWithSig(uint256,tuple)'(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: CallOverrides
    ): Promise<void>

    kickMember(memberAddress: string, overrides?: CallOverrides): Promise<void>

    'kickMember(address)'(memberAddress: string, overrides?: CallOverrides): Promise<void>

    materialContract(overrides?: CallOverrides): Promise<string>

    'materialContract()'(overrides?: CallOverrides): Promise<string>

    materialID(overrides?: CallOverrides): Promise<BigNumber>

    'materialID()'(overrides?: CallOverrides): Promise<BigNumber>

    maxGuildHallLevel(overrides?: CallOverrides): Promise<BigNumber>

    'maxGuildHallLevel()'(overrides?: CallOverrides): Promise<BigNumber>

    maxNitroLabLevel(overrides?: CallOverrides): Promise<BigNumber>

    'maxNitroLabLevel()'(overrides?: CallOverrides): Promise<BigNumber>

    mechContract(overrides?: CallOverrides): Promise<string>

    'mechContract()'(overrides?: CallOverrides): Promise<string>

    nitroContract(overrides?: CallOverrides): Promise<string>

    'nitroContract()'(overrides?: CallOverrides): Promise<string>

    nitroLab(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'nitroLab(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      materials: BigNumber
      level: BigNumber
      completedTime: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    nitroLabSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'nitroLabSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    nitroProductionFee(overrides?: CallOverrides): Promise<BigNumber>

    'nitroProductionFee()'(overrides?: CallOverrides): Promise<BigNumber>

    outOfGuild(overrides?: CallOverrides): Promise<void>

    'outOfGuild()'(overrides?: CallOverrides): Promise<void>

    owner(overrides?: CallOverrides): Promise<string>

    'owner()'(overrides?: CallOverrides): Promise<string>

    penaltyTime(overrides?: CallOverrides): Promise<BigNumber>

    'penaltyTime()'(overrides?: CallOverrides): Promise<BigNumber>

    produceNitro(overrides?: CallOverrides): Promise<void>

    'produceNitro()'(overrides?: CallOverrides): Promise<void>

    renounceOwnership(overrides?: CallOverrides): Promise<void>

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>

    setSigner(_signer: string, overrides?: CallOverrides): Promise<void>

    'setSigner(address)'(_signer: string, overrides?: CallOverrides): Promise<void>

    transferOwnership(newOwner: string, overrides?: CallOverrides): Promise<void>

    'transferOwnership(address)'(newOwner: string, overrides?: CallOverrides): Promise<void>

    upgradeBuilding(buildingType: BigNumberish, overrides?: CallOverrides): Promise<void>

    'upgradeBuilding(uint256)'(buildingType: BigNumberish, overrides?: CallOverrides): Promise<void>

    users(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      guildId: BigNumber
      lastOutOfGuild: BigNumber
      guildHallContribution: BigNumber
      nitroLabContribution: BigNumber
      producedNitro: BigNumber
      produceCompletedTime: BigNumber
      claimedNitro: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
    }>

    'users(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      guildId: BigNumber
      lastOutOfGuild: BigNumber
      guildHallContribution: BigNumber
      nitroLabContribution: BigNumber
      producedNitro: BigNumber
      produceCompletedTime: BigNumber
      claimedNitro: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
    }>
  }

  'filters': {
    ChangedGuildMaster(guildId: null, oldGuildMaster: null, newGuildMaster: null): EventFilter

    ClaimedNitro(guildId: null, member: null): EventFilter

    ContributeGuildHall(guildId: null, member: null, amountMaterial: null): EventFilter

    ContributeNitroLab(guildId: null, member: null, amountMaterial: null): EventFilter

    CreatedGuild(guildId: null, guildMaster: null, isPrivate: null): EventFilter

    Joined(guildId: null, memberAddress: null): EventFilter

    OutOfGuild(guildId: null, memberAddress: null): EventFilter

    OwnershipTransferred(previousOwner: string | null, newOwner: string | null): EventFilter

    ProduceNitro(guildId: null, member: null, completedTime: null): EventFilter

    RequestToJoin(guildId: null, memberAddress: null): EventFilter

    UpgradeGuildHall(guildId: null, level: null, compeletedTime: null): EventFilter

    UpgradeNitroLab(guildId: null, level: null, compeletedTime: null): EventFilter
  }

  'estimateGas': {
    CREATE_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>

    'CREATE_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<BigNumber>

    GUILD_HALL_ID(overrides?: CallOverrides): Promise<BigNumber>

    'GUILD_HALL_ID()'(overrides?: CallOverrides): Promise<BigNumber>

    JOIN_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>

    'JOIN_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<BigNumber>

    NITRO_LAB_ID(overrides?: CallOverrides): Promise<BigNumber>

    'NITRO_LAB_ID()'(overrides?: CallOverrides): Promise<BigNumber>

    __MechaGuild_init(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    '__MechaGuild_init(address,address,uint256,address,address,address)'(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    acceptJoinRequest(members: string[], overrides?: Overrides): Promise<BigNumber>

    'acceptJoinRequest(address[])'(members: string[], overrides?: Overrides): Promise<BigNumber>

    changeGuildMaster(newMaster: string, overrides?: Overrides): Promise<BigNumber>

    'changeGuildMaster(address)'(newMaster: string, overrides?: Overrides): Promise<BigNumber>

    claimNitro(overrides?: Overrides): Promise<BigNumber>

    'claimNitro()'(overrides?: Overrides): Promise<BigNumber>

    contributeGuildBase(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'contributeGuildBase(uint256,uint256)'(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    createGuildFee(overrides?: CallOverrides): Promise<BigNumber>

    'createGuildFee()'(overrides?: CallOverrides): Promise<BigNumber>

    createGuildMaterial(overrides?: CallOverrides): Promise<BigNumber>

    'createGuildMaterial()'(overrides?: CallOverrides): Promise<BigNumber>

    createGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'createGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    createGuildWithSig(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<BigNumber>

    'createGuildWithSig(bool,tuple)'(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<BigNumber>

    fundingWallet(overrides?: CallOverrides): Promise<BigNumber>

    'fundingWallet()'(overrides?: CallOverrides): Promise<BigNumber>

    getCurrentBuildingLevel(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'getCurrentBuildingLevel(uint256,uint256)'(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getEthSignedMessageHash(_messageHash: BytesLike, overrides?: CallOverrides): Promise<BigNumber>

    'getEthSignedMessageHash(bytes32)'(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getMemberOfGuild(guildId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getPendingMemberOfGuild(guildId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getPendingMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getSignerAddress(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'getSignerAddress(bytes32,bytes)'(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    guildCount(overrides?: CallOverrides): Promise<BigNumber>

    'guildCount()'(overrides?: CallOverrides): Promise<BigNumber>

    guildHall(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'guildHall(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    guildHallSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'guildHallSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    guilds(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'guilds(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    joinGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'joinGuildSigNonces(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    joinGuildWithSig(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<BigNumber>

    'joinGuildWithSig(uint256,tuple)'(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<BigNumber>

    kickMember(memberAddress: string, overrides?: Overrides): Promise<BigNumber>

    'kickMember(address)'(memberAddress: string, overrides?: Overrides): Promise<BigNumber>

    materialContract(overrides?: CallOverrides): Promise<BigNumber>

    'materialContract()'(overrides?: CallOverrides): Promise<BigNumber>

    materialID(overrides?: CallOverrides): Promise<BigNumber>

    'materialID()'(overrides?: CallOverrides): Promise<BigNumber>

    maxGuildHallLevel(overrides?: CallOverrides): Promise<BigNumber>

    'maxGuildHallLevel()'(overrides?: CallOverrides): Promise<BigNumber>

    maxNitroLabLevel(overrides?: CallOverrides): Promise<BigNumber>

    'maxNitroLabLevel()'(overrides?: CallOverrides): Promise<BigNumber>

    mechContract(overrides?: CallOverrides): Promise<BigNumber>

    'mechContract()'(overrides?: CallOverrides): Promise<BigNumber>

    nitroContract(overrides?: CallOverrides): Promise<BigNumber>

    'nitroContract()'(overrides?: CallOverrides): Promise<BigNumber>

    nitroLab(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'nitroLab(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    nitroLabSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'nitroLabSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    nitroProductionFee(overrides?: CallOverrides): Promise<BigNumber>

    'nitroProductionFee()'(overrides?: CallOverrides): Promise<BigNumber>

    outOfGuild(overrides?: Overrides): Promise<BigNumber>

    'outOfGuild()'(overrides?: Overrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>

    penaltyTime(overrides?: CallOverrides): Promise<BigNumber>

    'penaltyTime()'(overrides?: CallOverrides): Promise<BigNumber>

    produceNitro(overrides?: Overrides): Promise<BigNumber>

    'produceNitro()'(overrides?: Overrides): Promise<BigNumber>

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>

    'renounceOwnership()'(overrides?: Overrides): Promise<BigNumber>

    setSigner(_signer: string, overrides?: Overrides): Promise<BigNumber>

    'setSigner(address)'(_signer: string, overrides?: Overrides): Promise<BigNumber>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<BigNumber>

    'transferOwnership(address)'(newOwner: string, overrides?: Overrides): Promise<BigNumber>

    upgradeBuilding(buildingType: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'upgradeBuilding(uint256)'(
      buildingType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    users(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'users(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>
  }

  'populateTransaction': {
    CREATE_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'CREATE_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    GUILD_HALL_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'GUILD_HALL_ID()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    JOIN_GUILD_WITH_SIG_TYPEHASH(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'JOIN_GUILD_WITH_SIG_TYPEHASH()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    NITRO_LAB_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'NITRO_LAB_ID()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    __MechaGuild_init(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    '__MechaGuild_init(address,address,uint256,address,address,address)'(
      _nitroContract: string,
      _materialContract: string,
      _materialId: BigNumberish,
      _mechContract: string,
      _fundingWallet: string,
      _signer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    acceptJoinRequest(members: string[], overrides?: Overrides): Promise<PopulatedTransaction>

    'acceptJoinRequest(address[])'(
      members: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    changeGuildMaster(newMaster: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'changeGuildMaster(address)'(
      newMaster: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    claimNitro(overrides?: Overrides): Promise<PopulatedTransaction>

    'claimNitro()'(overrides?: Overrides): Promise<PopulatedTransaction>

    contributeGuildBase(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'contributeGuildBase(uint256,uint256)'(
      buildingType: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    createGuildFee(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'createGuildFee()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    createGuildMaterial(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'createGuildMaterial()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    createGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'createGuildSigNonces(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    createGuildWithSig(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'createGuildWithSig(bool,tuple)'(
      isPrivate: boolean,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    fundingWallet(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'fundingWallet()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    getCurrentBuildingLevel(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getCurrentBuildingLevel(uint256,uint256)'(
      guildId: BigNumberish,
      buildingType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getEthSignedMessageHash(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getEthSignedMessageHash(bytes32)'(
      _messageHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getMemberOfGuild(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getPendingMemberOfGuild(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getPendingMemberOfGuild(uint256)'(
      guildId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getSignerAddress(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getSignerAddress(bytes32,bytes)'(
      _messageHash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    guildCount(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'guildCount()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    guildHall(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'guildHall(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    guildHallSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'guildHallSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    guilds(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'guilds(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    joinGuildSigNonces(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'joinGuildSigNonces(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    joinGuildWithSig(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'joinGuildWithSig(uint256,tuple)'(
      guildId: BigNumberish,
      sig_: {
        deadline: BigNumberish
        v: BigNumberish
        r: BytesLike
        s: BytesLike
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    kickMember(memberAddress: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'kickMember(address)'(
      memberAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    materialContract(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'materialContract()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    materialID(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'materialID()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    maxGuildHallLevel(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'maxGuildHallLevel()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    maxNitroLabLevel(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'maxNitroLabLevel()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    mechContract(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'mechContract()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    nitroContract(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'nitroContract()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    nitroLab(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'nitroLab(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    nitroLabSetting(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'nitroLabSetting(uint256,uint256)'(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    nitroProductionFee(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'nitroProductionFee()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    outOfGuild(overrides?: Overrides): Promise<PopulatedTransaction>

    'outOfGuild()'(overrides?: Overrides): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    penaltyTime(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'penaltyTime()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    produceNitro(overrides?: Overrides): Promise<PopulatedTransaction>

    'produceNitro()'(overrides?: Overrides): Promise<PopulatedTransaction>

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>

    setSigner(_signer: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'setSigner(address)'(_signer: string, overrides?: Overrides): Promise<PopulatedTransaction>

    transferOwnership(newOwner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    upgradeBuilding(
      buildingType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'upgradeBuilding(uint256)'(
      buildingType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    users(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'users(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
